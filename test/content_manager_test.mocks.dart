// Mocks generated by Mockito 5.0.2 from annotations
// in player/test/content_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/src/client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:player/client/v2/client.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeClient extends _i1.Fake implements _i2.Client {}

class _FakeScreen extends _i1.Fake implements _i3.Screen {}

/// A class which mocks [ConcertoV2Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockConcertoV2Client extends _i1.Mock implements _i3.ConcertoV2Client {
  MockConcertoV2Client() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseURL =>
      (super.noSuchMethod(Invocation.getter(#baseURL), returnValue: '')
          as String);
  @override
  _i2.Client get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeClient()) as _i2.Client);
  @override
  set httpClient(_i2.Client? _httpClient) =>
      super.noSuchMethod(Invocation.setter(#httpClient, _httpClient),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i3.Screen> getScreen({int? screenId}) => (super.noSuchMethod(
      Invocation.method(#getScreen, [], {#screenId: screenId}),
      returnValue: Future.value(_FakeScreen())) as _i4.Future<_i3.Screen>);
  @override
  _i4.Future<List<_i3.Content>> getContent({String? fieldContentPath}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getContent, [], {#fieldContentPath: fieldContentPath}),
              returnValue: Future.value(<_i3.Content>[]))
          as _i4.Future<List<_i3.Content>>);
}
